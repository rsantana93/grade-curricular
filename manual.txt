travis login --pro --github-token XXXXXXXXXXXXXXX
travis login --pro
travis encrypt $(heroku auth:token) --add deploy.api_key --com
travis setup heroku
Nessa aula achei que faltou algumas informações complementares, para fazer o login no git tiver que utilizar o comando travis login --pro --github-token XXXXXXXXXXXXXXX, pois não estava conseguindo logar só com o comando (travis login --pro).
 Outro ponto não gerando o token pelo comando (travis encrypt $(heroku auth:token) --add deploy.api_key --com), pede para adicionar o repositório, ao adicionar o repositório no comando fala que não tem o arquivo .travis.yml no projeto, mesmo adicionando o arquivo no repositório não vai.
 
Caso você esteja trabalhando com um repositório aberto, obviamente não é interessante deixar
suas credenciais de banco de dados expostas. Para resolver esse problema, podemos utilizar as
variáveis de ambiente. Vá até a aba Settings e procure por Config vars, onde podemos ver o
nome e o valor da nossa única chave cadastrada. No seu projeto, substitua as três linhas
referente às credenciais e coloque. Depois basta apenas fazer o push:
spring.datasource.url=${DATABASE_URL}

Obviamente o projeto não irá mais funcionar localmente, pois a variável de ambiente
DATABASE_URL não existe na sua máquina. Como solução você pode criar essa variável em
sua máquina (solução que eu não gosto) ou criar um outro arquivo de properties fora do seu
projeto e apontá-lo quando for rodar o projeto localmente, usando o comando :
--spring.config.location="path"
